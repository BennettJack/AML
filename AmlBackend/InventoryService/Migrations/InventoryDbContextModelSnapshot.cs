// <auto-generated />
using System;
using InventoryService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryService.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    partial class InventoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("InventoryService.Data.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            AuthorName = "J.R.R Tolkien"
                        },
                        new
                        {
                            AuthorId = 2,
                            AuthorName = "Patric Rothfuss"
                        },
                        new
                        {
                            AuthorId = 3,
                            AuthorName = "Steven King"
                        });
                });

            modelBuilder.Entity("InventoryService.Data.Models.BookAuthorConnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("BookAuthorConnections");
                });

            modelBuilder.Entity("InventoryService.Data.Models.BookFormatConnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FormatId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("FormatId");

                    b.ToTable("BookFormatConnections");
                });

            modelBuilder.Entity("InventoryService.Data.Models.BookGenreConnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenreId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenreConnections");
                });

            modelBuilder.Entity("InventoryService.Data.Models.BookStockEntry", b =>
                {
                    b.Property<int>("BookStockEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookFormatConnectionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StockCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookStockEntryId");

                    b.HasIndex("BookFormatConnectionId");

                    b.ToTable("BookStockEntries");
                });

            modelBuilder.Entity("InventoryService.Data.Models.Format", b =>
                {
                    b.Property<int>("FormatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FormatName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FormatId");

                    b.ToTable("Formats");

                    b.HasData(
                        new
                        {
                            FormatId = 1,
                            FormatName = "Paperback"
                        },
                        new
                        {
                            FormatId = 2,
                            FormatName = "Hardback"
                        },
                        new
                        {
                            FormatId = 3,
                            FormatName = "Digital"
                        },
                        new
                        {
                            FormatId = 4,
                            FormatName = "DVD"
                        },
                        new
                        {
                            FormatId = 5,
                            FormatName = "Bluray"
                        },
                        new
                        {
                            FormatId = 6,
                            FormatName = "Streaming"
                        },
                        new
                        {
                            FormatId = 7,
                            FormatName = "Journal"
                        },
                        new
                        {
                            FormatId = 8,
                            FormatName = "Newspaper"
                        },
                        new
                        {
                            FormatId = 9,
                            FormatName = "Magazine"
                        },
                        new
                        {
                            FormatId = 10,
                            FormatName = "CD"
                        },
                        new
                        {
                            FormatId = 11,
                            FormatName = "PS5Game"
                        },
                        new
                        {
                            FormatId = 12,
                            FormatName = "SwitchGame"
                        },
                        new
                        {
                            FormatId = 13,
                            FormatName = "XboxGame"
                        });
                });

            modelBuilder.Entity("InventoryService.Data.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            GenreName = "Horror"
                        },
                        new
                        {
                            GenreId = 2,
                            GenreName = "Action"
                        },
                        new
                        {
                            GenreId = 3,
                            GenreName = "Comedy"
                        });
                });

            modelBuilder.Entity("InventoryService.Data.Models.Media.MediaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("SerialNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MediaModels");

                    b.HasDiscriminator().HasValue("MediaModel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("InventoryService.Data.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PublisherName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PublisherId");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            PublisherId = 1,
                            PublisherName = "Penguin"
                        },
                        new
                        {
                            PublisherId = 2,
                            PublisherName = "Sony"
                        },
                        new
                        {
                            PublisherId = 3,
                            PublisherName = "Activision"
                        });
                });

            modelBuilder.Entity("InventoryService.Data.Models.Book", b =>
                {
                    b.HasBaseType("InventoryService.Data.Models.Media.MediaModel");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PageCount")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Book");
                });

            modelBuilder.Entity("InventoryService.Data.Models.BookAuthorConnection", b =>
                {
                    b.HasOne("InventoryService.Data.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryService.Data.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("InventoryService.Data.Models.BookFormatConnection", b =>
                {
                    b.HasOne("InventoryService.Data.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryService.Data.Models.Format", "Format")
                        .WithMany()
                        .HasForeignKey("FormatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Format");
                });

            modelBuilder.Entity("InventoryService.Data.Models.BookGenreConnection", b =>
                {
                    b.HasOne("InventoryService.Data.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryService.Data.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("InventoryService.Data.Models.BookStockEntry", b =>
                {
                    b.HasOne("InventoryService.Data.Models.BookFormatConnection", "BookFormatConnection")
                        .WithMany()
                        .HasForeignKey("BookFormatConnectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookFormatConnection");
                });
#pragma warning restore 612, 618
        }
    }
}
